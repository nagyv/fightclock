// Generated by CoffeeScript 1.4.0
(function() {
  var $presetFields, $presetForm, $preset_container, $presets, add_next_track_click, add_preset_click, deletePreset, getValue, guid, init, keys, lget, lset, s4, save_preset_click;

  s4 = function() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  };

  guid = function() {
    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
  };

  lset = function(key, data) {
    return localStorage.setItem(key, JSON.stringify(data));
  };

  lget = function(key) {
    return JSON.parse(localStorage.getItem(key));
  };

  $presets = $("#presets");

  $preset_container = $(".preset");

  $presetFields = $("#presetFields");

  $presetForm = $("#presetForm");

  $presetForm.submit(function(ev) {
    return ev.preventDefault();
  });

  add_preset_click = $("#add_preset").asEventStream("click");

  add_next_track_click = $("#add_next_track").asEventStream("click");

  save_preset_click = $("#save_preset").asEventStream("click");

  keys = lget("Presets") || [];

  add_next_track_click.onValue(function(ev) {
    return $(ev.target).before($preset_container.clone());
  });

  add_preset_click.onValue(function() {
    return $presetForm.show();
  });

  getValue = function(wrapper) {
    return "" + wrapper.querySelector('.number').value + wrapper.querySelector('.unit').value;
  };

  save_preset_click.onValue(function(ev) {
    var data, key, wrapper;
    key = guid();
    data = {
      name: document.getElementById("preset_name").value,
      clock: (function() {
        var _i, _len, _ref, _results;
        _ref = $presetFields.find('.preset');
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          wrapper = _ref[_i];
          _results.push(getValue(wrapper));
        }
        return _results;
      })(),
      loops: document.getElementById("preset_loops").value
    };
    lset(key, data);
    keys.push(key);
    lset("Presets", keys);
    init();
    presetForm.reset();
    return $presetForm.hide();
  });

  deletePreset = function(key) {
    localStorage.removeItem(key);
    keys = lget("Presets") || [];
    return init();
  };

  window.loadPreset = function(key, autoStart) {
    var data;
    data = lget(key);
    data.autoStart = autoStart;
    return loadClock(data);
  };

  window.listPresets = function(container, template) {
    var key, listPreset, _i, _len, _results;
    container.html("");
    listPreset = function(key) {
      var data;
      data = lget(key);
      if (data) {
        data.key = key;
        return container.append(template(data));
      }
    };
    _results = [];
    for (_i = 0, _len = keys.length; _i < _len; _i++) {
      key = keys[_i];
      _results.push(listPreset(key));
    }
    return _results;
  };

  init = function() {
    listPresets($presets, _.template("<li data-key='<%= key %>{key}'><%= name %> (<%= clock.join(', ') %>) <button data-key='<%= key %>'>x</button></li>"));
    return $presets.find('button').click(function() {
      deletePreset(this.dataset.key);
      return $(this).parent().remove();
    });
  };

  (function() {
    return init();
  })();

}).call(this);
